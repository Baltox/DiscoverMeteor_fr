---
title: Introduction
slug: introduction
date: 0001/01/01
number: 1
contents: Apprendre ce qui rend Meteor si special.|Lire l'histoire de ce livre'.|Comprendre comment ce livre est organisé.
paragraphs: 35
---

Commençons avec un petit exercice mental. Imaginez que vous ouvriez le même dossier dans deux fenêtres différentes de votre ordinateur.

Cliquez maintenant dans une des deux fenêtres et effacez un fichier. Ce fichier a-t-il aussi disparu de l'autre fenêtre ?

Il n'est pas nécessaire de passer par ces étapes pour savoir que c'est bien le cas. Quand on modifie quelque chose dans notre système de fichier local, le changement s'applique partout sans avoir besoin de rafraîchir ou d'utiliser une fonction de rappel (callback). Ça marche, tout simplement. 

Par contre, imaginons ce même scénario sur le web. Considérons par exemple que vous ouvriez le même panneau d'administration Wordpress dans deux fenêtres de navigateur, puis que vous créiez un nouveau post dans l'une d'elles. Contrairement à l'expérience précedente, et même si vous attendez, l'autre fenêtre ne changera pas à moins de la rafraîchir. 

Nous nous sommes habitués d'années en années à l'idée qu'on ne communique avec un site que par de courtes actions, distinctes les unes des autres.

Heureusement, Meteor fait partie d'une nouvelle vague de frameworks et de technologies qui comptent bien remettre en question ce statu quo en rendant le web temps-réel (real-time) et réactif.

### Qu'est-ce que Meteor ?

Meteor est une plateforme basée sur Node.js pour créer des applications web en temps réel. C'est ce qui fait le lien entre la base de données de votre application et son interface utilisateur, tout en s'assurant que les deux restent bien synchronisés. 

Puisque Meteor est basé sur Node.js, il utilise JavaScript à la fois coté client et coté serveur. Autre chose, Meteor permet aussi de partager du code entre les deux environnements.

Le résultat est une plateforme simple et performante qui offre une couche d'abstraction aux problèmes et défauts habituellement rencontrés lors du dévelopement d'applications web.

### Pourquoi Meteor?

Bon alors pourquoi passer votre temps à apprendre Meteor plutôt qu'une autre plateforme? Sans compter les nombreuses fonctionnalités de Meteor, la raison est claire: Meteor est facile à apprendre. 

Comparé aux autres plateformes, Meteor permet l'implémentation et le déploiement d'une application web temps-réel en l'espace de seulement quelques heures. Et si vous avez un peu d'expérience avec le développement front-end, vous êtes déjà familier avec le JavaScript et vous n'aurez pas à apprendre un nouveau langage.

Meteor est peut-être la plateforme idéale qui répond à tous vos besoins, mais peut-être pas. Puisque qu'il ne faut qu'une soirée ou un week-end pour démarrer, pourquoi ne pas essayer?

### Pourquoi ce livre?

Pendant les 6 derniers mois, nous avons travaillé sur [Telescope](http://telesc.pe), une application Meteor open-source qui permet à tout le monde de créer son propre site social de news (voir [Reddit](http://reddit.com) ou [Hacker news](http://news.ycombinator.com), dans lequel les utilisateurs peuvent soumettre et voter sur des liens.

Nous avons beaucoup appris en créant cette application, mais trouver les réponses à nos questions n'était pas toujours très simple. Il nous a fallu assembler les pièces du puzzle à partir de sources multiples, et souvent même inventer nos propres solutions. Avec ce livre, nous souhaitions partager toutes ces leçons et créer un guide simple et détaillé qui vous aiderait à toutes les étapes de la construction d'une application Meteor.

L'application que nous allons créer ensemble est une version simplifiée de Telescope, appelée Microscope. Pendant sa création, nous aborderons tous les concepts nécessaires au développement d'une application Meteor, comme par exemple la gestion des comptes utilisateur, les collections Meteor, le routing, etc.

Après avoir lu ce livre, vous pourrez facilement comprendre le code de Telescope puisqu'il suit les mêmes concepts.

### A propos des auteurs

Au cas où vous vous demandez qui nous sommes et pourquoi vous pouvez nous faire confiance, voici un peu d'information sur nous.  

<%= image "tom-photo.jpg", "portrait" %>

Tom Coleman fait partie de [Percolate Studio](http://percolatestudio.com/), un studio de développement web ciblant la qualité et l'expérience utilisateur. Il est aussi co-auteur des packages [Meteorite](https://github.com/oortcloud/meteorite) et de [Atmosphere](http://atmosphere.meteor.com/), et est aussi celui derrière plusieurs projets open-source Meteor (ex. [Router](https://github.com/tmeasday/meteor-router)).

<%= image "sacha-photo.jpg", "portrait" %>

Sacha Greif a travaillé avec des startups comme [Hipmunk](http://hipmunk.com/) et [RubyMotion](http://rubymotion.com/) en tant que designeur produit et designeur web. Il est le créateur de [Telescope](http://telesc.pe/) et de [Sidebar](http://sidebar.io/) (basé sur Telescope), et il est aussi le fondateur de [Folyo](http://folyo.me/).

### Chapitres & Marges

////

////

////

////

### Commits & Live Instances

////

////

<%= commit "11-2", "Display notifications in the header." %>

////

### Quelques ressources supplémentaires

////

////

<% note do %>

### Ai-je besoin de Git?

Etre familiarisé avec le contrôle de versions Git n'est pas nécessaire pour suivre ce livre, mais nous le recommandons fortement.

Si vous souhaitez vous tenir à jour, nous vous recommandons [Git Is Simpler Than You Think](http://nfarina.com/post/9868516270/git-is-simpler) de Nick Farina.

Si vous êtes un débutant, nous vous recommandons également l’application [GitHub for Mac](http://mac.github.com/) qui vous permet de gérer vos repositories sans utiliser la ligne de commande.

<% end %>

### Nous contacter

- ////
- ////
- ////
- ////
