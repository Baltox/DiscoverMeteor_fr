---
title: Déploiement
slug: deploying
date: 0002/01/02
number: 2.5
sidebar: true
contents: Apprendre comment déployer sur Meteor.com.|Apprendre comment déployer sur Modulus.|Apprendre comment déployer sur votre propre serveur en utilisant Meteor.
paragraphs: 46
---

Certaines personnes aiment travailler tranquillement sur un projet jusqu'à qu'il soit parfait, tandis que d'autres ne peuvent pas attendre de le montrer au monde aussitôt que possible.

Si vous êtes le premier type de personne et que vous préférez plutôt développer en local pour l'instant, vous êtes libre de sauter ce chapitre. D'un autre côté, si vous voulez prendre un peu de temps pour apprendre comment déployer votre application Meteor en ligne, nous avons ce qu'il vous faut.

Nous allons apprendre comment déployer une application Meteor de plusieurs façons. Vous êtes libres d'utiliser chacune d'elles à n'importe quelle étape de votre processus de développement, si vous travaillez sur Microscope ou une autre application Meteor. Allons-y !

<% note do %>

### Présentation des Sidebars

C'est un chapitre **sidebar**, les Sidebars donnent une vision approfondie sur des sujets concernant Meteor indépendamment du reste du livre.

Donc si vous préférez plutôt continuer à travailler sur Microscope, vous pouvez le sauter sans problème maintenant et revenir plus tard.

<% end %>

### Déployer sur Meteor

Déployer sur un sous-domaine Meteor (i.e. `http://myapp.meteor.com`) est l'option la plus simple, et la première que nous testerons. Ça peut être utile de présenter votre application aux autres dans ses premiers jours, ou de configurer rapidement un serveur de test.

Déployer sur Meteor est simple. Ouvrez juste votre terminal allez dans le répertoire de votre application Meteor, et tapez :

~~~bash
$ meteor deploy myapp.meteor.com
~~~

Bien sûr, vous devrez faire attention à remplacer "myapp" avec un nom de votre choix, de préférence un qui n'est pas déjà utilisé. Si c'est votre premier déploiement d'application, il vous sera demandé de créer un compte Meteor. Et si tout va bien après quelques secondes vous serez capable d'accéder à votre application à `http://myapp.meteor.com`.

Vous pouvez vous référer à [la documentation officielle](http://docs.meteor.com/#deploying) pour plus d'informations sur des choses telles que accéder directement à la base de données de votre instance hébergée, ou configurer un domaine personnalisé pour votre application.

### Password Protection

////

~~~~bash
$ meteor deploy myapp.meteor.com -p
~~~~

////

////

### Deploying On Modulus

////

<% note do %>

### Demeteorizer

////

<% end %>

////

~~~bash
$ npm install -g modulus
~~~

////

~~~bash
$ modulus login
~~~

////

~~~bash
$ modulus project create
~~~

////

////

~~~bash
$ modulus env set MONGO_URL "mongodb://<user>:<pass>@mongo.onmodulus.net:27017/<database_name>"
~~~

////

~~~bash
$ modulus deploy
~~~

////

### Meteor Up

////

////

////

////

### Initializing Meteor Up

////

~~~bash
$ npm install -g mup
~~~

////

////

////

~~~bash
$ mkdir ~/microscope-deploy
$ cd ~/microscope-deploy
$ mup init
~~~

<% note do %>

### Sharing with Dropbox

////

<% end %>

### Meteor Up Configuration

////

////

////

~~~js
{
  //server authentication info
  "servers": [{
    "host": "hostname",
    "username": "root",
    "password": "password"
    //or pem file (ssh based authentication)
    //"pem": "~/.ssh/id_rsa"
  }],

  //install MongoDB in the server
  "setupMongo": true,

  //location of app (local directory)
  "app": "/path/to/the/app",

  //configure environmental
  "env": {
    "ROOT_URL": "http://supersite.com"
  }
}
~~~
<%= caption "mup.json" %>

////

**Server Authentication**

////

////

**MongoDB Configuration**

////

////

**Meteor App Path**

////

**Environment Variables**

////

### Setting Up and Deploying

////

~~~bash
$ mup setup
~~~

////

~~~bash
$ mup deploy
~~~

////

### Displaying Logs

////

~~~bash
$ mup logs -f
~~~

////

////
